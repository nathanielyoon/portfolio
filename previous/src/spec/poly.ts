const A = 0xffff, B = 0x1fff;
export const poly = (key: DataView, message: Uint8Array) => {
  const a = new Uint8Array(16), a0 = message.length;
  let a1 = 1 << 11, b = key.getUint16(0, true), c = key.getUint16(2, true);
  let d = key.getUint16(4, true), e = key.getUint16(6, true), a2, a3, a4, a5;
  let f = key.getUint16(8, true), g = key.getUint16(10, true), a6, a7, a8;
  let h = key.getUint16(12, true), i = key.getUint16(14, true), j = b & B;
  let k = (b >>> 13 | c << 3) & B, l = (c >> 10 | d << 6) & 0x1f03;
  let m = (d >> 7 | e << 9) & B, n = (e >> 4 | f << 12) & 0xff;
  let o = (f >> 14 | g << 2) & B, p = (g >> 11 | h << 5) & 0x1f81;
  let q = (h >> 8 | i << 8) & B, r = f >> 1 & 0x1ffe, s = i >> 5 & 0x7f;
  let t = f = 0, u = g = 0, v = h = 0, w = i = 0, x = 0, y = 0, z = 0;
  while (a1 && z < a0) {
    a0 - z < 16 &&
      (a.set(message.subarray(z)), a1 = z = a[a0 - z]++, message = a);
    b = message[z++] | message[z++] << 8, c = message[z++] | message[z++] << 8;
    a2 = f + (b & B), a3 = g + ((b >>> 13 | c << 3) & B);
    d = message[z++] | message[z++] << 8, e = message[z++] | message[z++] << 8;
    a4 = h + ((c >> 10 | d << 6) & B), a5 = i + ((d >> 7 | e << 9) & B);
    b = message[z++] | message[z++] << 8, c = message[z++] | message[z++] << 8;
    a6 = t + ((e >> 4 | b << 12) & B), a7 = u + ((b >> 1) & B);
    d = message[z++] | message[z++] << 8, e = message[z++] | message[z++] << 8;
    a8 = v + ((b >> 14 | c << 2) & B), f = w + ((c >> 11 | d << 5) & B);
    g = x + ((d >> 8 | e << 8) & B), y += e >> 5 | a1;
    c = a2 * j + (a3 * s + a4 * q + a5 * p + a6 * o) * 5, b = c >>> 13;
    c = (c & B) + (a7 * r + a8 * n + f * m + g * l + y * k) * 5, d = c >>> 13;
    d += b + a2 * k + a3 * j + (a4 * s + a5 * q + a6 * p) * 5, b = d >>> 13;
    d = (d & B) + (a7 * o + a8 * r + f * n + g * m + y * l) * 5, e = d >>> 13;
    e += b + a2 * l + a3 * k + a4 * j + (a5 * s + a6 * q) * 5, b = e >>> 13;
    e = (e & B) + (a7 * p + a8 * o + f * r + g * n + y * m) * 5, h = e & B;
    e = b + (e >>> 13) + a2 * m + a3 * l + a4 * k + a5 * j + a6 * s * 5;
    b = e >>> 13, e = (e & B) + (a7 * q + a8 * p + f * o + g * r + y * n) * 5;
    i = e & B, e = b + (e >>> 13) + a2 * n + a3 * m + a4 * l + a5 * k + a6 * j;
    b = e >>> 13, e = (e & B) + (a7 * s + a8 * q + f * p + g * o + y * r) * 5;
    t = e & B, e = b + (e >>> 13) + a2 * r + a3 * n + a4 * m + a5 * l + a6 * k;
    b = e >>> 13, e = (e & B) + a7 * j + (a8 * s + f * q + g * p + y * o) * 5;
    u = e & B, e = b + (e >>> 13) + a2 * o + a3 * r + a4 * n + a5 * m + a6 * l;
    b = e >>> 13, e = (e & B) + a7 * k + a8 * j + (f * s + g * q + y * p) * 5;
    v = e & B, e = b + (e >>> 13) + a2 * p + a3 * o + a4 * r + a5 * n + a6 * m;
    b = e >>> 13, e = (e & B) + a7 * l + a8 * k + f * j + (g * s + y * q) * 5;
    w = e & B, e = b + (e >>> 13) + a2 * q + a3 * p + a4 * o + a5 * r + a6 * n;
    b = e >>> 13, e = (e & B) + a7 * m + a8 * l + f * k + g * j + y * s * 5;
    x = e & B, e = b + (e >>> 13) + a2 * s + a3 * q + a4 * p + a5 * o + a6 * r;
    y = (e & B) + a7 * n + a8 * m + f * l + g * k + y * j;
    f = ((e >>> 13) + (y >>> 13)) * 5 + (c & B), g = (d & B) + (f >>> 13);
    f &= B, y &= B;
  }
  h += g >>> 13, i += h >>> 13, t += i >>> 13, u += t >>> 13, v += u >>> 13;
  w += v >>> 13, x += w >>> 13, y += x >>> 13, f += (y >>> 13) * 5, i &= B;
  g = (g & B) + (f >>> 13), h += g >>> 13, f &= B, g &= B, h &= B, t &= B;
  j = f + 5, k = g + (j >>> 13), l = h + (k >>> 13), m = i + (l >>> 13), u &= B;
  n = t + (m >>> 13), r = u + (n >>> 13), v &= B, o = v + (r >>> 13), w &= B;
  x &= B, y &= B, p = w + (o >>> 13), q = x + (p >>> 13), s = y + (q >>> 13);
  b = -(s >>> 13 ^ 1), c = ~b & B, s = (s & B) - (1 << 13), f = f & b | j & c;
  g = g & b | k & c, h = h & b | l & c, i = i & b | m & c, t = t & b | n & c;
  u = u & b | r & c, v = v & b | o & c, w = w & b | p & c, x = x & b | q & c;
  y = y & b | s & c, a[0] = f = ((f | g << 13) & A) + key.getUint16(16, true);
  a[2] = g = (g >> 3 | h << 10 & A) + key.getUint16(18, true) + (f >> 16);
  a[4] = h = (h >> 6 | i << 7 & A) + key.getUint16(20, true) + (g >> 16);
  a[6] = i = (i >> 9 | t << 4 & A) + key.getUint16(22, true) + (h >> 16);
  t = ((t >> 12 | u << 1 | v << 14) & A) + key.getUint16(24, true) + (i >> 16);
  a[10] = u = (v >> 2 | w << 11 & A) + key.getUint16(26, true) + (t >> 16);
  a[12] = v = (w >> 5 | x << 8 & A) + key.getUint16(28, true) + (u >> 16);
  a[14] = w = (x >> 8 | y << 5 & A) + key.getUint16(30, true) + (v >> 16);
  a[8] = t, a[1] = f >> 8, a[3] = g >> 8, a[5] = h >> 8, a[7] = i >> 8;
  return a[9] = t >> 8, a[11] = u >> 8, a[13] = v >> 8, a[15] = w >> 8, a;
};
