{
  "id": 295032,
  "key": "Email_address",
  "title": "Email address",
  "latest": { "id": 1271074681, "timestamp": "2025-01-22T13:56:28Z" },
  "content_model": "wikitext",
  "license": {
    "url": "https://creativecommons.org/licenses/by-sa/4.0/deed.en",
    "title": "Creative Commons Attribution-Share Alike 4.0"
  },
  "source": "{{Short description|Identifier of the destination where email messages are delivered}}An '''email address''' identifies an [[email]] box to which messages are delivered. While early messaging systems used a variety of formats for addressing, today, email addresses follow a set of specific rules originally standardized by the [[Internet Engineering Task Force]] (IETF) in the 1980s, and updated by {{IETF RFC|5322|6854|leadout=and}}. The term email address in this article refers to just the ''addr-spec'' in Section 3.4 of {{IETF RFC|5322|link=no}}. The RFC defines ''address'' more broadly as either a ''mailbox'' or ''group''. A ''mailbox'' value can be either a ''name-addr'', which contains a ''display-name'' and ''addr-spec'', or the more common ''addr-spec'' alone.\n\nAn email address, such as ''john.smith@example.com'', is made up from a [[#Local-part|local-part]], the symbol @, and a ''[[#Domain|domain]]'', which may be a [[domain name]] or an [[IP address]] enclosed in brackets. Although the standard requires the local-part to be case-sensitive,<ref>{{cite IETF | title = Simple Mail Transfer Protocol | rfc = 5321 | author = J. Klensin | date = October 2008 | section = 2.4 | sectionname = General Syntax Principles and Transaction Model | page = 15 | quote = The local-part of a mailbox MUST BE treated as case sensitive. }}</ref> it also urges that receiving hosts deliver messages in a case-independent manner,<ref>{{cite IETF | title = Simple Mail Transfer Protocol | rfc = 5321 | author = J. Klensin | date = October 2008 | section = 2.4 | sectionname = General Syntax Principles and Transaction Model | page = 15 | quote = However, exploiting the case sensitivity of mailbox local-parts impedes interoperability and is discouraged. }}</ref> e.g., that the mail system in the domain ''example.com'' treat ''John.Smith'' as equivalent to ''john.smith''; some mail systems even treat them as equivalent to ''johnsmith''.<ref>[https://support.google.com/mail/answer/10313?topic=14822# ''\"...you can add or remove the dots from a mail address without changing the actual destination address; and they'll all go to your inbox...\"''], Google.com</ref> Mail systems often limit the users' choice of name to a subset of the technically permitted characters; with the introduction of [[internationalized domain name]]s, efforts are progressing to permit non-[[ASCII]] characters in email addresses.\n\nDue to the ubiquity of email in today's world, email addresses are often used as regular [[usernames]] by many websites and services that provide a user profile or account.<ref>{{Cite web |last=Morrison |first=Sara |date=2021-09-06 |title=How a simple email address makes things complicated |url=https://www.vox.com/recode/22620276/what-to-do-when-you-get-someone-elses-email-security-vulnerabilities-gmail-inbox-invasion |access-date=2024-07-15 |website=Vox |language=en-US}}</ref> For example, if a user wants to login to their [[Xbox Live]] video gaming profile, they would use their [[Microsoft account]] in the form of an email address as the username ID, even though the service in this case is not email.\n\n== Message transport ==\n\nAn email address consists of two parts, a local-part (sometimes a user name, but not always) and a domain; if the domain is a domain name rather than an IP address then the SMTP client uses the domain name to look up the mail exchange IP address. The general format of an email address is ''local-part''@''domain'', e.g. jsmith@<nowiki>[</nowiki>192.168.1.2<nowiki>]</nowiki>, ''jsmith@example.com''. The SMTP client transmits the message to the mail exchange, which may forward it to another mail exchange until it eventually arrives at the host of the recipient's mail system.\n\nThe transmission of electronic mail from the author's computer and between mail hosts in the Internet uses the [[Simple Mail Transfer Protocol]] (SMTP), defined in {{IETF RFC|5321|5322|leadout=and}}, and extensions such as {{IETF RFC|6531}}. The mailboxes may be accessed and managed by applications on personal computers, mobile devices or [[webmail]] sites, using the [[SMTP]] protocol and either the [[Post Office Protocol]] (POP) or the [[Internet Message Access Protocol]] (IMAP).\n\nWhen [[Simple Mail Transfer Protocol#Mail processing model|transmitting email messages]], [[mail user agent]]s (MUAs) and [[mail transfer agent]]s (MTAs) use the [[domain name system]] (DNS) to look up a [[Domain Name System#DNS resource records|Resource Record]] (RR) for the recipient's domain. A mail exchanger resource record ([[MX record]]) contains the name of the recipient's mailserver. In absence of an MX record, an address record ([[A record|A]] or [[AAAA record|AAAA]]) directly specifies the mail host.\n\nThe local-part of an email address has no significance for intermediate mail relay systems other than the final mailbox host. Email senders and intermediate relay systems must not assume it to be case-insensitive, since the final mailbox host may or may not treat it as such. A single mailbox may receive mail for multiple email addresses, if configured by the administrator. Conversely, a single email address may be the alias to a distribution list to many mailboxes. [[Email alias]]es, [[electronic mailing list]]s, [[#Sub-addressing|sub-addressing]], and [[Email filtering|catch-all]] addresses, the latter being mailboxes that receive messages regardless of the local-part, are common patterns for achieving a variety of delivery goals.\n\nThe addresses found in the header fields of an email message are not directly used by mail exchanges to deliver the message. An email message also contains a message envelope that contains the information for mail routing. While envelope and header addresses may be equal, [[Email spoofing|forged email]] addresses (also called ''spoofed email addresses'') are often seen in [[email spam|spam]], [[phishing]], and many other Internet-based scams. This has led to several initiatives which aim to make such forgeries of fraudulent emails easier to spot.\n\n== Syntax ==\n\nThe format of an email address is ''local-part@domain'', where the local-part may be up to 64 [[Octet (computing)|octets]] long and the [[Domain name|domain]] may have a maximum of 255 octets.<ref>{{cite IETF | title = Simple Mail Transfer Protocol | rfc = 5321 | sectionname = Size Limits and Minimums | section = 4.5.3.1 | last = Klensin | first = J. | author-link = John Klensin | date = October 2008 | publisher = [[Internet Engineering Task Force|IETF]] | doi = 10.17487/RFC5321}}</ref> The formal definitions are in <nowiki>RFC 5322</nowiki> (sections 3.2.3 and 3.4.1) and <nowiki>RFC 5321</nowiki>—with a more readable form given in the informational <nowiki>RFC 3696</nowiki> (written by J. Klensin, the author of {{IETF RFC|5321|link=no}}) and the associated errata.<!-- Note RFC 2047 \"+ An 'encoded-word' MUST NOT appear in any portion of an 'addr-spec'.\" -->\n\nAn email address also may have an associated \"display-name\" (Display Name) for the recipient, which precedes the address specification, now surrounded by angled brackets, for example: ''John&nbsp;Smith&nbsp;<john.smith@example.org>''.<ref>{{cite IETF | rfc = 5322 | title = Internet Message Format | section = 3.4 | sectionname = Address Specification | access-date = March 14, 2023 }}</ref> Email spammers and phishers will often use \"Display Name spoofing\" to trick their victims, by using a false Display Name, or by using a different email address as the Display Name.<ref>{{cite web|url=https://www.cyber.nj.gov/informational-report/spotting-a-spoofing|access-date=17 April 2023|website=cyber.nj.gov|title=Spotting a Spoofing|date=November 19, 2020}}</ref>\n\nEarlier forms of [[Non-Internet email address|email addresses for other networks than the Internet]] included other notations, such as that required by [[X.400]], and the [[UUCP]] ''[[bang path]]'' notation, in which the address was given in the form of a sequence of computers through which the message should be relayed. This was widely used for several years, but was superseded by the Internet standards promulgated by the [[Internet Engineering Task Force]] (IETF).\n\n=== Local-part ===\n\nThe local-part of the email address may be unquoted or may be enclosed in quotation marks.\n\nIf unquoted, it may use any of these [[ASCII]] characters:\n* uppercase and lowercase [[Basic Latin (Unicode block)|Latin]] letters <code>A</code> to <code>Z</code> and <code>a</code> to <code>z</code>\n* digits <code>0</code> to <code>9</code>\n* printable characters <code>!#$%&'*+-/=?^_`{|}~</code>\n* dot <code>.</code>, provided that it is not the first or last character and provided also that it does not appear consecutively (e.g., <code>John..Doe@example.com</code> is not allowed).<ref name=rfc3696>{{cite IETF |rfc=3696 |last=Klensin |first=J. |author-link=John Klensin |date=February 2004 |publisher=[[Internet Engineering Task Force|IETF]] |access-date=2017-08-01 |doi=10.17487/RFC3696 }}{{rp|§3}}</ref>\n\nIf quoted, it may contain Space, Horizontal Tab (HT), any ASCII graphic except Backslash and Quote and a quoted-pair consisting of a Backslash followed by HT, Space or any ASCII graphic; it may also be split between lines anywhere that HT or Space appears. In contrast to unquoted local-parts, the addresses <code>\".John.Doe\"@example.com</code>, <code>\"John.Doe.\"@example.com</code> and <code>\"John..Doe\"@example.com</code> are allowed.<!-- Read RFC 5321 and 5322 before you change this. -->\n\nThe maximum total length of the local-part of an email address is 64 octets.<ref name=\"rfc5321\">{{cite IETF |title Simple Mail Transfer Protocol|rfc=5321|publisher=[[Internet Engineering Task Force|IETF]] | last=Klensin |first=J. |author-link=John Klensin |date = October 2008 | section = 4.5.3.1.1 | access-date = 2019-08-01}}</ref>\n\n* Space and special characters <code>\"(),:;<>@[\\]</code> are allowed with restrictions (they are only allowed inside a quoted string, as described in the paragraph below, and in that quoted string, any backslash or double-quote must be preceded once by a backslash);\n* Comments are allowed with parentheses at either end of the local-part; e.g., <code>john.smith(comment)@example.com</code> and <code>(comment)john.smith@example.com</code> are both equivalent to <code>john.smith@example.com</code>.\n\nIn addition to the above ASCII characters, international characters above U+007F, encoded as [[UTF-8]], are permitted by <nowiki>RFC 6531</nowiki> when the [[Simple Mail Transfer Protocol#Extension discovery mechanism|EHLO]] specifies [[Simple Mail Transfer Protocol#SMTPUTF8|SMTPUTF8]], though even mail systems that support SMTPUTF8 and 8BITMIME may restrict which characters to use when assigning local-parts.\n\nA local-part is either a Dot-string or a Quoted-string; it cannot be a combination. Quoted strings and characters, however, are not commonly used.{{Citation needed|reason=While this intuitively seems true, I'd like to see a reference. In any event, it seems irrelevant when describing the syntax. The sequence xyz123 is also not commonly used, but that's immaterial. |date=August 2016}} <nowiki>RFC 5321</nowiki> also warns that \"a host that expects to receive mail SHOULD avoid defining mailboxes where the Local-part requires (or uses) the Quoted-string form\".<!-- See RFC 5321: Local-part = Dot-string / Quoted-string -->\n\nThe local-part <code>postmaster</code> is treated specially—it is case-insensitive, and should be forwarded to the domain email administrator. Technically all other local-parts are case-sensitive, therefore <code>johns@example.com</code> and <code>JohnS@example.com</code> specify different mailboxes; however, many organizations treat uppercase and lowercase letters as equivalent. Indeed, <nowiki>RFC 5321</nowiki> warns that \"a host that expects to receive mail SHOULD avoid defining mailboxes where ... the Local-part is case-sensitive\".\n\nDespite the wide range of special characters which are technically valid, organisations, mail services, mail servers and mail clients in practice often do not accept all of them. For example, [[Windows Live Hotmail]] only allows creation of email addresses using alphanumerics, dot (<code>.</code>), underscore (<code>_</code>) and hyphen (<code>-</code>).<ref>{{cite web |url=https://signup.live.com/newuser.aspx?mkt=en-us |title=Sign up for Windows Live |access-date=2008-07-26 }}. However, the phrase is hidden, thus one has to either check the availability of an invalid ID, e.g., ''me#1'', or resort to alternative displaying, e.g., ''no-style'' or source view, in order to read it.</ref> Common advice is to avoid using some special characters to avoid the risk of rejected emails.<ref>{{cite web |url=https://www.jochentopf.com/email/chars.html |title=Characters in the local part of an email address |access-date=2016-03-30 }}</ref>\n\nAccording to <nowiki>RFC 5321</nowiki> 2.3.11 ''Mailbox and Address,'' \"the local-part MUST be interpreted and assigned semantics only by the host specified in the domain of the address\". This means that no assumptions can be made about the meaning of the local-part of another mail server. It is entirely up to the configuration of the mail server.\n\nInterpretation of the local-part is dependent on the conventions and policies implemented in the mail server. For example, [[case sensitivity]] may distinguish mailboxes differing only in capitalization of characters of the local-part, although this is not very common.<ref>[http://email.about.com/od/emailbehindthescenes/f/email_case_sens.htm Are Email Addresses Case Sensitive?] {{Webarchive|url=https://web.archive.org/web/20160603181434/http://email.about.com/od/emailbehindthescenes/f/email%5Fcase%5Fsens.htm |date=2016-06-03 }} by Heinz Tschabitscher</ref> For example, [[Gmail]] ignores all dots in the local-part of a ''@gmail.com'' address for the purposes of determining account identity.<ref>{{cite web|url=http://mail.google.com/support/bin/answer.py?answer=10313&topic=14822|title=Receiving someone else's mail|work=google.com}}</ref>\n\n==== Sub-addressing ====\n\nSome mail services support a tag included in the local-part, such that the address is an alias to a prefix of the local-part. Typically the characters following a plus and less often the characters following a minus, so fred+bar@domain and fred+foo@domain might end up in the same inbox as fred+@domain or even as fred@domain. For example, the address ''joeuser+tag@example.com'' denotes the same delivery address as ''joeuser@example.com''. {{IETF RFC|5233}}<ref>{{cite IETF | rfc = 5233 | title = Sieve Email Filtering: Subaddress Extension|year = 2008 | access-date = February 9, 2019 | last1 = Murchison | first1 = K. | publisher = [[IETF]] }}</ref> refers to this convention as ''subaddressing'', but it is also known as ''plus addressing'', ''tagged addressing'' or ''mail extensions''. This can be useful for tagging emails for sorting, and for spam control.<ref name=\"Gmail\">{{cite web|title=Send emails from a different address or alias|url=https://support.google.com/mail/answer/22370?hl=en#alias&zippy=%2Cfilter-using-your-gmail-alias|website= Gmail Help|access-date=13 December 2023}}</ref><!-- http://www.faqs.org/faqs/mail/addressing/index.html does not wildcarded addresses -->\n\nAddresses of this form, using various separators between the base name and the tag, are supported by several email services, including [[Andrew Project]] (plus),<ref>{{Cite web|url=https://www.andrew.cmu.edu/user/rjs3/ams.pdf|title=An Overview of the Andrew Message System|accessdate=17 April 2023}}</ref> Runbox (plus),<ref>{{Cite web|url=https://help.runbox.com/subaddressing-plus-addressing/|title=Subaddressing/Plus Addressing\n|accessdate= 1 January 2024}}</ref> [[Gmail]] (plus),<ref name=\"Gmail\"/> [[Rackspace]] (plus), [[Yahoo! Mail]] Plus (hyphen),<ref>{{cite web|url=https://help.yahoo.com/kb/SLN3523.html|title=Disposable addresses in Yahoo Mail |website=Yahoo Help }}</ref> Apple's [[iCloud]] (plus), [[Outlook.com]] (plus),<ref>{{cite web|url=http://withinwindows.com/within-windows/outlookcom-supports-simpler-email-aliases-too|title=Outlook.com supports simpler \"+\" email aliases too|last=Rivera|first=Rafael|work=Within Windows|date=2013-09-17|access-date=2023-12-04|url-status=dead|archive-url=https://web.archive.org/web/20140220025605/http://withinwindows.com/within-windows/outlookcom-supports-simpler-email-aliases-too|archive-date=2014-02-20}}</ref> [[Mailfence]] (plus),<ref>{{cite web |title=Plus Addressing: The Best Way to Track Spammers in 2024 |url=https://blog.mailfence.com/plus-addressing-to-track-spammers/ |work=mailfence.com}}</ref> [[Proton Mail]] (plus),<ref>{{cite web |title=Addresses and Aliases |url=https://proton.me/support/addresses-and-aliases |work=proton.me}}</ref> [[Fastmail]] (plus and Subdomain Addressing),<ref>{{cite web | url = https://www.fastmail.com/help/receive/addressing.html | access-date = 2020-10-06 | title = Plus addressing and subdomain addressing | archive-url = https://web.archive.org/web/20201006174046/https://www.fastmail.com/help/receive/addressing.html | archive-date = 2020-10-06 | url-status = live | website = www.fastmail.com}}</ref> postale.io (plus),<ref>{{cite web | url = https://postale.io/faq#Do%20you%20support%20automatic%20aliases%20such%20as%20name+tag@domain.com%20(a.k.a%20sub-addressing)? | access-date = 2020-10-06 | title = postale.io's FAQ on sub-addressing | archive-url = https://web.archive.org/web/20201006222841/https://postale.io/faq#Do%20you%20support%20automatic%20aliases%20such%20as%20name+tag@domain.com%20(a.k.a%20sub-addressing)? | archive-date = 2020-10-06 | url-status = live | website = postale.io}}</ref> Pobox (plus),<ref>{{cite web | url=https://helpspot.pobox.com/index.php?pg=kb.page&id=58 | access-date = 2020-10-03 | title = Can I use myaddress+extension@pobox.com with my Pobox account? | date = n.d. | website = helpspot.pobox.com | url-status = live | archive-url=https://web.archive.org/web/20201003170157/https://helpspot.pobox.com/index.php?pg=kb.page&id=58 | archive-date = 2020-10-03 | quote = Pobox supports the use of \"+anystring\" (plus extensions) with any address.}}</ref>\nMeMail (plus),<ref>{{cite web | url = https://www.memail.com/ | access-date = 2020-10-06 | title = MeMail | website = www.memail.com}}</ref> and [[Message transfer agent|MTAs]] like [[MMDF]] (equals), [[Qmail]] and [[Courier Mail Server]] (hyphen).<ref name=\"control\">{{cite web|title=Dot-Qmail, Control the delivery of mail messages|url=http://qmail.org/man/man5/dot-qmail.html|access-date=27 January 2012|archive-url=https://web.archive.org/web/20120126124047/http://qmail.org/man/man5/dot-qmail.html|archive-date=26 January 2012|url-status=dead}}</ref><ref>{{cite web|last=Sill|first=Dave|title=4.1.5. extension addresses|url=http://www.lifewithqmail.org/lwq.html#extension-addresses|work=Life with qmail|access-date=27 January 2012}}</ref> [[Postfix (software)|Postfix]] and [[Exim]] allow configuring an arbitrary separator from the legal character set.<ref>{{cite web|url=http://www.postfix.org/postconf.5.html#recipient_delimiter|title=Postfix Configuration Parameters|work=postfix.org}}</ref><ref>{{cite web|url=https://www.exim.org/exim-html-current/doc/html/spec_html/ch-generic_options_for_routers.html|title=Exim Configuration Parameters, \"local_part_suffix\"|work=exim.org}}</ref>\n\nThe text of the tag may be used to apply filtering,<ref name=control /> or to create ''single-use'', or [[disposable email address]]es.<ref>Gina Trapani (2005) [http://lifehacker.com/144397/instant-disposable-gmail-addresses \"Instant disposable Gmail addresses\"]</ref>\n\n=== Domain ===\n\nThe [[domain name]] part of an email address has to conform to strict guidelines: it must match the requirements for a [[hostname]], a list of dot-separated [[DNS]] labels, each label being limited to a length of 63 characters and consisting of:<ref name=\"rfc3696\" />{{rp|§2}}\n\n* Uppercase and lowercase [[Basic Latin (Unicode block)|Latin]] letters <code>A</code> to <code>Z</code> and <code>a</code> to <code>z</code>;\n* Digits <code>0</code> to <code>9</code>, provided that top-level domain names are not all-numeric;\n* Hyphen <code>-</code>, provided that it is not the first or last character.\nThis rule is known as the ''LDH rule'' (letters, digits, hyphen). In addition, the domain may be an [[IP address]] literal, surrounded by square brackets <code>[]</code>, such as <code>jsmith@[192.168.2.1]</code> or <code>jsmith@[IPv6:2001:db8::1]</code>, although this is rarely seen except in [[email spam]]. [[Internationalized domain name]]s (which are encoded to comply with the requirements for a [[hostname]]) allow for presentation of non-ASCII domains. In mail systems compliant with <nowiki>RFC 6531</nowiki> and <nowiki>RFC 6532</nowiki> an email address may be encoded as [[UTF-8]], both a local-part as well as a domain name.\n\nComments are allowed in the domain as well as in the local-part; for example, <code>john.smith@(comment)example.com</code> and <code>john.smith@example.com(comment)</code> are equivalent to <code>john.smith@example.com</code>.\n\n{{IETF RFC|2606}} specifies that certain domains, for example those intended for documentation and testing, should not be resolvable and that as a result mail addressed to mailboxes in them and their subdomains should be non-deliverable. Of note for e-mail are ''example'', ''invalid'', ''example.com'', ''example.net'', and ''example.org''.\n\n=== Examples ===\n\n==== Valid email addresses ====\n* <code>simple@example.com</code>\n* <code>very.common@example.com</code>\n* <code>FirstName.LastName@EasierReading.org</code> (case is always ignored after the @ and usually before)\n* <code>x@example.com</code> (one-letter local-part)\n* <code>long.email-address-with-hyphens@and.subdomains.example.com</code>\n* <code>user.name+tag+sorting@example.com</code> (may be routed to <code>user.name@example.com</code> inbox depending on mail server)\n* <code>name/surname@example.com</code> (slashes are a printable character, and allowed)\n* <code>admin@example</code> (local domain name with no [[Top-level domain|TLD]], although ICANN highly discourages dotless email addresses<ref>{{cite web |title=New gTLD Dotless Domain Names Prohibited |url=https://www.icann.org/news/announcement-2013-08-30-en |website=www.icann.org |publisher=ICANN |access-date=23 March 2020 |ref=gtld-dotless-prohibited |language=en}}</ref>)\n* <code>example@s.example</code> (see the [[List of Internet top-level domains]])\n* <code>\" \"@example.org</code> (space between the quotes) <!-- RFC 5321 4.1.2 Local-part includes Quoted-string, qtextSMTP includes space; RFC 5322 3.4.1. Addr-Spec includes quoted-string, quoted-string includes FWS -->\n* <code>\"john..doe\"@example.org</code> (quoted double dot)\n* <code>mailhost!username@example.org</code> (bangified host route used for uucp mailers)\n* <code>\"very.(),:;<>[]\\\".VERY.\\\"very@\\\\ \\\"very\\\".unusual\"@strange.example.com</code> (include non-letters character AND multiple [[at sign]], the first one being double quoted)\n* <code>user%example.com@example.org</code> (% escaped mail route to user@example.com via example.org)\n* <code>user-@example.org</code> (local-part ending with non-alphanumeric character from the list of allowed printable characters)\n* <code>postmaster@[123.123.123.123]</code> (IP addresses are allowed instead of domains when in square brackets, but strongly discouraged)\n* <code>postmaster@[IPv6:2001:0db8:85a3:0000:0000:8a2e:0370:7334]</code> (IPv6 uses a different syntax)\n* <code>_test@[IPv6:2001:0db8:85a3:0000:0000:8a2e:0370:7334]</code> (begin with underscore different syntax)\n\n==== Valid email addresses with SMTPUTF8 ====\n* <code>I❤️CHOCOLATE@example.com</code> ([[emoji]] are only allowed with SMTPUTF8)\n\n==== Invalid email addresses ====\n* <code>abc.example.com</code> (no @ character)\n* <code>a@b@c@example.com</code> (only one @ is allowed outside quotation marks)\n* <code>a\"b(c)d,e:f;g<h>i[j\\k]l@example.com</code> (none of the special characters in this local-part are allowed outside quotation marks)\n* <code>just\"not\"right@example.com</code> (quoted strings must be dot separated or be the only element making up the local-part)\n* <code>this is\"not\\allowed@example.com</code> (spaces, quotes, and backslashes may only exist when within quoted strings and preceded by a backslash)\n* <code>this\\ still\\\"not\\\\allowed@example.com</code> (even if escaped (preceded by a backslash), spaces, quotes, and backslashes must still be contained by quotes)\n* <code>1234567890123456789012345678901234567890123456789012345678901234+x@example.com</code> (local-part is longer than 64 characters)\n* <code>i.like.underscores@but_they_are_not_allowed_in_this_part</code> (underscore is not allowed in domain part)\n\n== Validation and verification ==\n{{More citations needed section|date=July 2019}}\n\nEmail addresses are often requested as input to website as validation of user existence. Other validation methods are available, such as cell phone number validation, [[postal mail]] validation, and fax validation.\n\nAn email address is generally recognized as having two parts joined with an [[at-sign]] (''@''), although technical specification detailed in <nowiki>RFC 822</nowiki> and subsequent RFCs are more extensive.<ref>{{cite web |title=How Domino formats the sender's Internet address in outbound messages |url=https://www.ibm.com/support/knowledgecenter/en/SSKTMJ_9.0.1/admin/conf_howdominoformatsthesendersinternetaddressinoutbo_r.html |website=IBM Knowledge Center |access-date=23 July 2019}}</ref>\n\nSyntactically correct, verified email addresses do not guarantee that an [[email box]] exists. Thus many mail servers use other techniques and check the mailbox existence against relevant systems such as the [[Domain Name System]] for the domain or using [[callback verification]] to check if the mailbox exists. Callback verification is an imperfect solution, as it may be disabled to avoid a [[directory harvest attack]], or callbacks may be reported as spam and lead to listing on a [[DNSBL]].\n\nSeveral validation techniques may be utilized to validate a user email address. For example,<ref>{{cite web |title=M3AAWG Sender Best Common Practices, Version 3 |url=https://www.m3aawg.org/sites/default/files/document/M3AAWG_Senders_BCP_Ver3-2015-02.pdf |website=Messaging, Malware and Mobile Anti-Abuse Working Group |access-date=23 July 2019 |date=February 2015}}</ref>\n\n* Verification links: Email address validation is often accomplished for account creation on websites by sending an email to the user-provided email address with a special temporary hyperlink. On receipt, the user opens the link, immediately activating the account. Email addresses are also useful as means of delivering messages from a website, e.g., user messages, user actions, to the email inbox.\n* Formal and informal standards: <nowiki>RFC 3696</nowiki> provides specific advice for validating Internet identifiers, including email addresses. Some websites instead attempt to evaluate the validity of email addresses through arbitrary standards, such as by rejecting addresses containing valid characters, such as ''+'' and ''/'', or enforcing arbitrary length limitations. Email address internationalization provides for a much larger range of characters than many current validation algorithms allow, such as all Unicode characters above U+0080, encoded as [[UTF-8]].\n* Algorithmic tools: Large websites, bulk mailers and spammers require efficient tools to validate email addresses. Such tools depend upon [[heuristic algorithm]]s and [[statistical model]]s.<ref>[http://dev.egure.com/verification-validation-techniques-email-address-quality-assurance.pdf Verification & Validation Techniques for Email Address Quality Assurance] by Jan Hornych 2011, University of Oxford</ref>\n* Sender reputation: An email sender's reputation may be used to attempt to verify whether the sender is trustworthy or a potential spammer. Factors that may be incorporated into an assessment of sender reputation include the quality of past contact with or content provided by, and engagement levels of, the sender's IP address or email address.\n* Browser-based verification: HTML5 forms implemented in many browsers allow email address validation to be handled by the browser.<ref>{{cite web|url=http://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)|title=4.10 Forms&nbsp;— HTML5|work=w3.org}}</ref>\n\nSome companies offer services to validate an email address, often using an [[application programming interface]], but there is no guarantee that it will provide accurate results.\n\n== Internationalization ==\n\nThe [[IETF]] conducts a technical and standards working group devoted to internationalization issues of email addresses, entitled ''Email Address Internationalization'' (EAI, also known as IMA, Internationalized Mail Address).<ref>{{cite web |url=http://tools.ietf.org/wg/eai/ |title=Eai Status Pages |access-date=July 26, 2008 |work=Email Address Internationalization (Active WG) |publisher=IETF|date=March 17, 2006 – March 18, 2013}}</ref> This group produced {{IETF RFC|6530|6531|6532|6533|leadout=and}}, and continues to work on additional EAI-related RFCs.\n\nThe IETF's EAI Working group published <nowiki>RFC 6530</nowiki> \"Overview and Framework for Internationalized Email\", which enabled non-ASCII characters to be used in both the local-parts and domain of an email address. <nowiki>RFC 6530</nowiki> provides for email based on the [[UTF-8]] encoding, which permits the full repertoire of [[Unicode]]. <nowiki>RFC 6531</nowiki> provides a mechanism for SMTP servers to negotiate transmission of the [[SMTPUTF8]] content.\n\nThe basic EAI concepts involve exchanging mail in UTF-8. Though the original proposal included a downgrading mechanism for legacy systems, this has now been dropped.<ref>{{cite web |url=http://datatracker.ietf.org/wg/eai/charter/ |title=Email Address Internationalization (eai) |access-date=November 30, 2010 |publisher=IETF}}</ref> The local servers are responsible for the local-part of the address, whereas the domain would be restricted by the rules of [[internationalized domain name]]s, though still transmitted in UTF-8. The mail server is also responsible for any mapping mechanism between the IMA form and any ASCII alias.\n\nEAI enables users to have a localized address in a native language script or character set, as well as an ASCII form for communicating with legacy systems or for script-independent use. Applications that recognize internationalized domain names and mail addresses must have facilities to convert these representations.\n\nSignificant demand for such addresses is expected in China, Japan, Russia, and other markets that have large user bases in a non-Latin-based writing system.\n\nFor example, in addition to the [[.in]] top-level domain, the government of India in 2011<ref>{{cite web|url=https://features.icann.org/2011-01-25-approval-delegation-seven-top-level-domains-representing-india-various-languages|title=2011-01-25 - Approval of Delegation of the seven top-level domains representing India in various languages |website=features.icann.org}}</ref> got approval for \".bharat\", (from ''[[Republic of India|Bhārat Gaṇarājya]]''), written in seven [[Brahmic scripts|different scripts]]<ref>{{Cite web|url=https://registry.in/Internationalized_Domain_Names_IDNs|title=Internationalized Domain Names (IDNs) {{!}} Registry.In|website=registry.in|access-date=2016-10-17}}</ref><ref>{{Cite news|url=http://economictimes.indiatimes.com/tech/internet/now-get-your-email-address-in-hindi/articleshow/53830034.cms|title=Now, get your email address in Hindi |newspaper=The Economic Times|access-date=2016-10-17}}</ref> for use by Gujrati, Marathi, Bangali, Tamil, Telugu, Punjabi and Urdu speakers. Indian company XgenPlus.com claims to be the world's first EAI mailbox provider,<ref>{{Cite web|url=https://uasg.tech/2017/02/universal-acceptance-india/|title=Universal Acceptance in India|date=15 February 2017 }}</ref> and the [[Government of Rajasthan]] now supplies a free email account on domain राजस्थान.भारत for every citizen of the state.<ref>{{Cite news|url=http://vasundhararaje.in/hi/cm-launches-free-e-mail-and-e-vault-for-every-citizen-of-the-state-digifest-18082017.html|title=देश में पहला, प्रदेश के हर नागरिक के लिए मुफ्त ई-वॉल्ट और ई-मेल की सुविधा शुरू - वसुन्धरा राजे|date=2017-08-18|work=वसुन्धरा राजे|access-date=2017-08-20|language=hi-IN}}</ref> A leading media house Rajasthan Patrika launched their IDN domain पत्रिका.भारत with contactable email.\n\nThe example addresses below would not be handled by {{IETF RFC|5321}} based servers without an extension, but are permitted by the '''UTF8SMTP''' extension of {{IETF RFC|6530|6531|leadout=and}}. Servers compliant with this will be able to handle these:\n\n* [[Latin alphabet]] with [[diacritics]]: éléonore@example.com\n* [[Greek alphabet]]: δοκιμή@παράδειγμα.δοκιμή\n* [[Traditional Chinese characters]]: 我買@屋企.香港\n* [[Japanese characters]]: 二ノ宮@黒川.日本\n* [[Cyrillic characters]]: медведь@с-балалайкой.рф\n* [[Devanagari|Devanagari characters]]: संपर्क@डाटामेल.भारत\n\n== See also ==\n{{Portal|internet|technology}}\n\n* [[Anti-spam techniques]]\n* [[Email client]]\n* [[Email box]]\n* [[Email authentication]]\n* [[Non-Internet email address]]\n* [[International email]]\n\n== References ==\n\n{{reflist}}\n\n== Further reading ==\n\n* {{IETF RFC|821|link=no}} Simple Mail Transfer Protocol (Obsoleted by {{IETF RFC|2821|5321|leadout=and|link=no}})\n* {{IETF RFC|822|link=no}} Standard for the Format of ARPA Internet Text Messages (Obsoleted by {{IETF RFC|2822|link=no}}) (Errata)\n* {{IETF RFC|1035|link=no}} Domain names, Implementation and specification (Errata)\n* {{IETF RFC|1123|link=no}} Requirements for Internet Hosts, Application and Support (Updated by {{IETF RFC|2821|5321|link=no}}) (Errata)\n* {{IETF RFC|2142|link=no}} Mailbox Names for Common Services, Roles and Functions (Errata)\n* {{IETF RFC|2821|link=no}} Simple Mail Transfer Protocol (Obsoletes {{IETF RFC|821|link=no}}, Updates {{IETF RFC|1123|link=no}}, Obsoleted by {{IETF RFC|5321|link=no}}) (Errata)\n* {{IETF RFC|2822|link=no}} Internet Message Format (Obsoletes {{IETF RFC|822|link=no}}, Obsoleted by {{IETF RFC|5322|link=no}}) (Errata)\n* {{IETF RFC|3696|link=no}} Application Techniques for Checking and Transformation of Names (Errata)\n* {{IETF RFC|4291|link=no}} IP Version 6 Addressing Architecture (Updated by {{IETF RFC|5952|link=no}}) (Errata)\n* {{IETF RFC|5321|link=no}} Simple Mail Transfer Protocol (Obsoletes {{IETF RFC|2821|link=no}}, Updates {{IETF RFC|1123|link=no}}) (Errata)\n* {{IETF RFC|5322|link=no}} Internet Message Format (Obsoletes {{IETF RFC|2822|link=no}}, Updated by {{IETF RFC|6854|link=no}}) (Errata)\n* {{IETF RFC|5598|link=no}} Internet Mail Architecture\n* {{IETF RFC|5952|link=no}} A Recommendation for IPv6 Address Text Representation (Updates {{IETF RFC|4291|link=no}}) (Errata)\n* {{IETF RFC|6530|link=no}} Overview and Framework for Internationalized Email (Obsoletes {{IETF RFC|4952|5504|5825|link=no}})\n* {{IETF RFC|6531|link=no}} SMTP Extension for Internationalized Email (Obsoletes {{IETF RFC|5336|link=no}})\n* {{IETF RFC|6854|link=no}} Update to Internet Message Format to Allow Group Syntax in the \"From:\" and \"Sender:\" Header Fields (Updates {{IETF RFC|5322|link=no}})\n\n== External links ==\n\n* {{Wikibooks inline|Coding Cookbook|Validate Email Address}}\n* {{Wikibooks inline|JavaScript|Best Practices}}\n* {{Commons category-inline|Email address}}\n\n[[Category:Email]]"
}
